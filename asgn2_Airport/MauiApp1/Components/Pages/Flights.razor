@page "/flights"
@using MauiApp1.Components.Pages

<style>
   .flex_container{
       display:flex;
       justify-content:space-evenly;
   }
   section{
       margin-bottom:30px;
   }
   select{
       display:block;
       width:150px;
   }
   h3{
       text-align:center;
   }
   button{
       border:1px solid black;
       border-radius:10px;
       height:30px;
   }
   .flight{
       width:100%;
   }
   input{
        width: 100%;
   }
   .full{
       width:100%;
   }

</style>

<section >
    <h3>Flight Finder</h3>

    <div class="flex_container">
        <div>
            <label>From:</label>
            <select @bind = "departure">
                <option>Select depature </option>
             <option value="Any">Any</option> 
                @if(airports.Count == 0)
                    {
                    <option>Loading</option>
                    }
                else
                    {
             
                    foreach(var airport in airports)
                        {
                        <option value="@airport">@airport</option>
                        }
                    
                    }
                    
            </select>
        </div>

        <div>
            <label>To:</label>
            <select @bind = "destination" >
                <option>Select destination</option>
                <option value="Any">Any</option>
                @if (airports.Count == 0)
                    {
                    <option>Loading</option>
                    }
                else
                    {

                    foreach (var airport in airports)
                        {
                        <option value="@airport">@airport</option>
                        }

                    }
            </select>
        </div>
        
        <div>
            <label>Day:</label>
            <select @bind="dayOfWeek">
                <option>Select the day</option>
                <option value="Any">Any</option>
                @foreach (var day in weekdays)
                        {
                        <option value="@day">@day</option>
                        }
                    }
            </select>
           
        </div>
        <button @onclick="FindFlight">Find Flights</button>
   
    </div>
  
</section>
<section>
   <h3>Flights</h3>
   <select class="flight" @onchange="FillTheForm">
        @if(foundFlight.Count == 0)
            {
            <option>There is no flight found</option>
            }
        else
            {
            <option>Please select one flight</option>
            }
        @foreach (var flight in foundFlight)
                {
            <option value="@flight.Code">@flight.Code, @flight.Departure, @flight.Destination,@flight.Airline</option>
                }
            }

    </select>
   
</section>
<section>
    <h3>Reserve</h3>
    <div>
        <label >Flight Code:</label>
        <input value="@new_code" type="text" /> 
    </div>
    <div>
        <label>Airline:</label>
        <input value="@new_airline" type="text" /> 
    </div>
    <div>
        <label>Day:</label>
        <input value="@new_day" type="text" />
    </div>
    <div>
        <label>Time:</label>
        <input value="@new_time" type="text" />
    </div>
    <div>
        <label>Cost:</label>
        <input value="@new_price" type="text" />
    </div>
    <div>
        <label>Name:</label>
        <input type="text" @onchange="ReceiveName" />
       
    </div>
    <div>
        <label>Citizenship</label>
        <input type="text" @onchange="ReceiveCitizenship" />
    </div>
    <p>@message</p>
    <button @onclick="SaveReservation">Reserve</button>
    <p>Reservation Code:@reserve_code</p>
</section>

<section>
    <h3>Search</h3>
    <div>
        <label>Code:</label>
        <input type="text" name="reservedCode" value="" @onchange="ReceiveInputCode" />
    </div>
    <div>
        <label>Airline:</label>
        <input type="text" name="reservedAirline" value="" @onchange="ReceiveInputAirline" />
    </div>
    <div>
        <label>Name:</label>
        <input type="text" name="reservedName" value="" @onchange="ReceiveInputName" />
        <p>@input_name</p>
    </div>
    <button  @onclick="FindReservation" >Find Reservations</button>
</section>

<section>
    <select class="full">
        @if(reservations.Count == 0)
            {
            <option>There is no reservation</option>
            }
        else
            {
            foreach(var r in foundReservation)
                {
                <option>@r.ReserveCode,@r.ReserveName,@r.ReserveDeparture,@r.ReserveDestination,@r.ReserveAirline,@r.ReserveDay,@r.ReserveTime</option>
                }
            }
       
    </select> 

</section>

@code {
    FlightManager fm = new FlightManager();
    List<string> airports = FlightManager.airportList;
    List<string> weekdays = FlightManager.weekdayList;
    List<Flight> flights = FlightManager.flightList;
    List<Flight> foundFlight = FlightManager.foundFlight;
    //create a list to save the reservation has been found
    ReserveManager rm = new ReserveManager();
    List<Reservation> reservations = ReserveManager.reserveList;
    List<Reservation> foundReservation = new List<Reservation>();
    // List<Reservation> reservedFlight = ReserveManager.LoadReservations();

    //variables to store value of the drop down 
    string departure ;
    string destination ;
    string dayOfWeek ;

    //varibales to store the information of flight after user choose the flight
    string new_from;
    string new_to;
    string new_code;
    string new_airline;
    string new_day;
    string new_time;
    int new_seat_number;
    double new_price;

    //varibales to hold the name and citizenship when make reservation 
    string name;
    string citizenship;

    //file path storing the reservation file
    string reserve_file = ReserveManager.reserve_file;
    //message to check the name or citizenship 
    string message;

    //varible to store the reservation code
    string reserve_code = " ";

    //store value of the input for searching reservation 
    string input_name;
    string input_code;
    string input_airline;


    public void FindFlight()
        {    
        foundFlight.Clear();
        foreach (var f in flights)
            {
            if ((f.Departure == departure || departure== "Any")
            && (f.Destination == destination  || destination =="Any")
            && (f.WeekDay == dayOfWeek || dayOfWeek == "Any" ))
                {
                foundFlight.Add(f);
                }
            }

        }

    public void FillTheForm(ChangeEventArgs e)
        {
        new_code = e.Value.ToString();
        foreach(var f in flights)
            {
            if(new_code == f.Code)
                {
                new_from = f.Departure;
                new_to = f.Destination;
                new_airline = f.Airline;
                new_day = f.WeekDay;
                new_time = f.Time;
                new_seat_number = f.SeatNum;
                new_price = f.Price;
                }
            }
        }
    //-----------MAKE RESERVATION---------------------

    public void ReceiveName(ChangeEventArgs e)
        {
        name = e.Value.ToString();
        }

    public void ReceiveCitizenship(ChangeEventArgs e)
        {
        citizenship = e.Value.ToString();
        }

    public void SaveReservation()
        {
        //when clicking the button, generate an object and save this reserve to the list
        if (name != null && citizenship != null)
            {
            //receive the ramdom reservation code
            reserve_code = ReserveManager.GenerateRandomNumber();
            Reservation rs = new Reservation(reserve_code, name, citizenship,new_from,new_to, new_airline,new_day,new_time);
            reservations.Add(rs);
            string line = reserve_code + "," + name + "," + citizenship + "," + new_from + "," + new_to + "," + new_airline + "," + new_day + "," + new_time;
            StreamWriter sw = new StreamWriter(reserve_file,true);
            sw.WriteLine(line);
            sw.Close();
           
            }
        else
            {
            message = "Please enter your name and citizenship";
            }
        }

    //=================SEARCH RESERVATION====================
    public void ReceiveInputName(ChangeEventArgs e)
        {
        input_name = e.Value.ToString();
        }

    public void ReceiveInputCode(ChangeEventArgs e)
        {
        input_code = e.Value.ToString();
        }
    public void ReceiveInputAirline(ChangeEventArgs e)
        {
        input_airline = e.Value.ToString();
        }


    public void FindReservation()
        {
        // ReserveManager.PopulateReservation();
    
        foreach (var r in reservations)
            {
            if (input_code == r.ReserveCode || input_name == r.ReserveName || input_airline == r.ReserveAirline)
                {
                 foundReservation.Add(r);
                }
             }
         }


}
